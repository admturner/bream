<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards">
	<!-- See https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->
	<!-- See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards -->
	<!-- See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki -->
	<!-- See https://github.com/wimg/PHPCompatibility -->

	<description>Apply WordPress Coding Standards to all theme files.</description>

	<rule ref="WordPress"/>
	<rule ref="WordPress.CodeAnalysis.EmptyStatement"/>

	<rule ref="WordPress.NamingConventions.ValidVariableName">
		<properties>
			<property name="customPropertiesWhitelist" type="array">
				<!-- From database structure queries -->
				<element value="Collation"/>
				<element value="Column_name"/>
				<element value="Default"/>
				<element value="Extra"/>
				<element value="Field"/>
				<element value="Index_type"/>
				<element value="Key"/>
				<element value="Key_name"/>
				<element value="Msg_text"/>
				<element value="Non_unique"/>
				<element value="Null"/>
				<element value="Sub_part"/>
				<element value="Type"/>
				<!-- From plugin/theme data -->
				<element value="authorAndUri"/>
				<element value="Name"/>
				<element value="Version"/>
				<!-- From the result of wp_xmlrpc_server::wp_getPageList() -->
				<element value="dateCreated"/>

				<!-- From DOMDocument -->
				<element value="childNodes"/>
				<element value="formatOutput"/>
				<element value="nodeName"/>
				<element value="nodeType"/>
				<element value="parentNode"/>
				<element value="preserveWhiteSpace"/>
				<element value="textContent"/>
				<!-- From PHPMailer -->
				<element value="AltBody"/>
				<element value="Body"/>
				<element value="CharSet"/>
				<element value="ContentType"/>
				<element value="Encoding"/>
				<element value="Hostname"/>
				<element value="mailHeader"/>
				<element value="MIMEBody"/>
				<element value="MIMEHeader"/>
				<element value="Sender"/>
				<element value="Subject"/>
				<!-- From PHPUnit_Util_Getopt -->
				<element value="longOptions"/>
				<!-- From POP3 -->
				<element value="ERROR"/>
				<!-- From ZipArchive -->
				<element value="numFiles"/>
			</property>
		</properties>
	</rule>

	<arg name="extensions" value="php"/>

	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="./"/>

	<!-- Check up to 20 files simultaneously. -->
	<arg name="parallel" value="20"/>

	<!-- Show sniff codes in all reports. -->
	<arg value="ps"/>

	<!-- Check all files in this directory and those below it. -->
	<file>.</file>

	<!-- Exclude the build folder in the current directory, as Travis puts the checkout in a build directory. -->
	<exclude-pattern type="relative">^build/*</exclude-pattern>

	<!-- Directories and third party library exclusions -->
	<exclude-pattern>/node_modules/*</exclude-pattern>
	<exclude-pattern>/vendor/*</exclude-pattern>

	<exclude-pattern>/tests/phpunit/includes/speed-trap-listener\.php</exclude-pattern>

	<!-- Test data and fixtures -->
	<exclude-pattern>/tests/phpunit/build*</exclude-pattern>
	<exclude-pattern>/tests/phpunit/data/*</exclude-pattern>

	<!-- Whitelist the WP DB Class and related tests for usage of direct database access functions. -->
	<rule ref="WordPress.DB.RestrictedFunctions">
		<exclude-pattern>/tests/phpunit/tests/db/charset\.php</exclude-pattern>
	</rule>

	<!-- Whitelist the WP DB related tests for issues with prepared SQL placeholders
		 (as the handling of those are being tested). -->
	<rule ref="WordPress.DB.PreparedSQLPlaceholders.UnfinishedPrepare">
		<exclude-pattern>/tests/phpunit/tests/db\.php</exclude-pattern>
	</rule>
	<rule ref="WordPress.DB.PreparedSQLPlaceholders.UnsupportedPlaceholder">
		<exclude-pattern>/tests/phpunit/tests/db\.php</exclude-pattern>
	</rule>
	<rule ref="WordPress.DB.PreparedSQLPlaceholders.UnescapedLiteral">
		<exclude-pattern>/tests/phpunit/tests/db\.php</exclude-pattern>
	</rule>
	<rule ref="WordPress.DB.PreparedSQL.NotPrepared">
		<exclude-pattern>/tests/phpunit/tests/admin/includesSchema\.php</exclude-pattern>
		<exclude-pattern>/tests/phpunit/tests/multisite/site\.php</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.I18n">
		<!-- Verify that the text_domain is set to the desired text domain.
	             Multiple valid text domains can be provided in a comma-delimited list. -->
		<properties>
			<property name="text_domain" type="array" value="bream"/>
		</properties>
		<!-- Whitelist the I18n functions file from issues identified by the I18n sniff
			     (such as calling the low-level translate() function). -->
		<exclude-pattern>/tests/phpunit/tests/l10n\.php</exclude-pattern>
		<exclude-pattern>/tests/phpunit/tests/l10n/loadTextdomainJustInTime\.php</exclude-pattern>
	</rule>

	<rule ref="Generic.Functions.FunctionCallArgumentSpacing">
		<exclude-pattern>/wp-config\.php</exclude-pattern>
		<exclude-pattern>/wp-config-sample\.php</exclude-pattern>
		<exclude-pattern>/wp-tests-config\.php</exclude-pattern>
		<exclude-pattern>/wp-tests-config-sample\.php</exclude-pattern>
	</rule>

	<rule ref="Generic.Files.LineEndings">
		<exclude-pattern>/wp-config\.php</exclude-pattern>
		<exclude-pattern>/wp-config-sample\.php</exclude-pattern>
	</rule>

	<!-- Whitelist test classes for select sniffs. -->
	<rule ref="WordPress.Files.FileName">
		<properties>
			<property name="custom_test_class_whitelist" type="array" value="WP_UnitTestCase,WP_Ajax_UnitTestCase,WP_Canonical_UnitTestCase,WP_Test_REST_TestCase,WP_Test_REST_Controller_Testcase,WP_Test_REST_Post_Type_Controller_Testcase,WP_XMLRPC_UnitTestCase"/>
		</properties>
	</rule>

	<!-- Set the minimum supported WP version. This is used by several sniffs.
		 The minimum version set here should be in line with the minimum WP version
		 as set in the "Requires at least" tag in the readme.txt file. -->
	<config name="minimum_supported_wp_version" value="5.0"/>

	<!-- Exclude the unit tests from select sniffs. -->
	<rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
		<exclude-pattern>/tests/phpunit/tests/*</exclude-pattern>
	</rule>
	<rule ref="PEAR.NamingConventions.ValidClassName.Invalid">
		<exclude-pattern>/tests/phpunit/tests/*</exclude-pattern>
	</rule>

</ruleset>
